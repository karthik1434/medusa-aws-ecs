name: Deploy Medusa Backend

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # 1. Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      # 3. Login to ECR
      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 657506130511.dkr.ecr.ap-south-1.amazonaws.com

      # 4. Build & Push Docker Image (from docker/ directory with root context)
      - name: Build & Push Docker Image
        run: |
          cd docker
          docker build -t medusa -f Dockerfile ..
          docker tag medusa:latest 657506130511.dkr.ecr.ap-south-1.amazonaws.com/medusa:latest
          docker push 657506130511.dkr.ecr.ap-south-1.amazonaws.com/medusa:latest
          cd ..

      # 5. Terraform Setup & Apply
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          cd terraform
          terraform init
          terraform destroy -auto-approve
          terraform apply -auto-approve
        env:
          TF_VAR_ecr_image_url: 657506130511.dkr.ecr.ap-south-1.amazonaws.com/medusa:latest

      # 6. Force ECS Service Update (if not using Terraform for service management)
      - name: Update ECS Service
        run: |
          aws ecs update-service \
            --cluster medusa-cluster \
            --service medusa-service \
            --force-new-deployment